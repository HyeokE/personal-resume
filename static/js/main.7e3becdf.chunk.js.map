{"version":3,"sources":["styled.ts","components/Projects.tsx","contents/project.tsx","components/Communciation.tsx","contents/communication.tsx","components/Experience.tsx","contents/experience.tsx","contents/workExperience.tsx","Resume.tsx","App.tsx","GlobalStyles.ts","index.tsx"],"names":["Container","styled","div","StyledH1","h1","StyledH2","h2","StyledH3","h3","StyledH4","h4","StyledH5","h5","StyledSection","section","StyledUl","img","ul","StyledLi","li","PeriodMark","span","BigParagraph","p","Row","RowLeft","RowRight","StyledA","a","StyledP","Role","Other","Project","hr","Time","time","Projects","data","type","map","project","id","title","role","projects","name","link","target","href","rel","duration","description","whatYouDid","did","whatYouLearn","learn","techStack","projectData","Communication","communication","content","communicationData","Experience","experience","experienceData","workExperience","Resume","App","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e3becdf.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 50rem;\n  margin: auto;\n`;\nexport const StyledH1 = styled.h1`\n  font-size: 5rem;\n  line-height: 1.1;\n  @media screen and (max-width: 960px) {\n    font-size: 3rem;\n  }\n`;\nexport const StyledH2 = styled.h2`\n  font-size: 3rem;\n  margin: 4rem 0 2rem 0;\n  @media screen and (max-width: 960px) {\n    font-size: 2.5rem;\n  }\n`;\nexport const StyledH3 = styled.h3`\n  font-size: 2rem;\n  margin: 0 0 1rem 0;\n`;\nexport const StyledH4 = styled.h4`\n  font-size: 2rem;\n  margin: 0 0 0.5rem 0;\n  @media screen and (max-width: 960px) {\n    font-size: 1.5rem;\n  }\n`;\nexport const StyledH5 = styled.h5`\n  font-size: 1.3rem;\n  margin: 0 0 0.5rem 0;\n  color: #333333;\n`;\nexport const StyledSection = styled.section`\n  padding: 0 2rem;\n`;\nexport const GithubImg = styled.img`\n  height: 2rem;\n`;\nexport const ImageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0 solid;\n  border-radius: 50%;\n  margin-left: 15px;\n  height: 2.5rem;\n  width: 2.5rem;\n  &:hover {\n    cursor: pointer;\n    background: #bfc4cb;\n    transition: 0.3s all;\n  }\n`;\n\nexport const StyledUl = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 0 1rem 0;\n  font-size: 1.1rem;\n  & > li {\n    position: relative;\n    padding: 0.2rem 0 0.2rem 1rem;\n  }\n  & > li:before {\n    position: absolute;\n    left: 0;\n    display: inline-block;\n    content: '•';\n    color: #3a7bd5;\n  }\n`;\nexport const StyledLi = styled.li`\n  position: relative;\n  padding: 0.2rem 0 0.2rem 1rem;\n  &:before {\n    position: absolute;\n    left: 0;\n    display: inline-block;\n    content: '•';\n    color: #3a7bd5;\n  }\n`;\nexport const PeriodMark = styled.span`\n  color: #3a7bd5;\n`;\nexport const BigParagraph = styled.p`\n  font-size: 2rem;\n  line-height: 1.4;\n  font-weight: 500;\n  @media screen and (max-width: 960px) {\n    font-size: 1.5rem;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  padding: 3rem 0;\n  border-bottom: 1px solid #eeeeee;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n  }\n`;\n\nexport const RowLeft = styled.div`\n  flex-basis: 18rem;\n  padding-right: 1rem;\n  flex-shrink: 0;\n  @media screen and (max-width: 960px) {\n    flex-basis: 100%;\n    padding-right: 0;\n    padding-bottom: 1rem;\n  }\n`;\nexport const RowRight = styled.div`\n  flex-grow: 1;\n`;\nexport const StyledA = styled.a`\n  color: #3a7bd5;\n  transition: color 0.3s ease;\n  font-weight: bold;\n  margin-right: 0.2rem;\n  margin-bottom: 2rem;\n  text-decoration: underline;\n  &:visited {\n    color: #3a7bd5;\n  }\n  &:hover {\n    color: #00d2ff;\n    cursor: pointer;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n`;\nexport const StyledP = styled.p`\n  margin: 0 0 1rem 0;\n  font-size: 1.1rem;\n  line-height: 1.4;\n`;\nexport const ProjectWrapper = styled.div`\n  padding: 1.5rem 0;\n  &:first-child {\n    padding-top: 0;\n  }\n`;\nexport const Role = styled.span`\n  display: block;\n  margin-bottom: 0.4rem;\n  font-size: 16px;\n`;\nexport const Other = styled.div`\n  padding: 3rem 0;\n  border-bottom: 1px solid #eeeeee;\n`;\nexport const TimeWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n  font-size: 1rem;\n`;\nexport const StyledHr = styled.hr`\n  border: none;\n  border-bottom: 1px solid #eeeeee;\n  overflow: visible;\n`;\nexport const Project = styled.div`\n  padding: 1.5rem 0;\n  &:first-child {\n    padding-top: 0;\n  }\n`;\nexport const Time = styled.time`\n  display: block;\n  margin-bottom: 1.3rem;\n`;\n","import React from 'react';\nimport { ProjectList, ProjectProps } from '../contents/project';\nimport {\n  PeriodMark,\n  Project,\n  Role,\n  Row,\n  RowLeft,\n  RowRight,\n  StyledA,\n  StyledH2,\n  StyledH3,\n  StyledH4,\n  StyledH5,\n  StyledLi,\n  StyledP,\n  StyledSection,\n  StyledUl,\n  Time,\n} from '../styled';\n\nconst Projects = ({\n  data,\n  type,\n}: {\n  data: ProjectList;\n  type: 'WORK' | 'PROJECT';\n}) => {\n  return (\n    <StyledSection>\n      <StyledH2>\n        {type === 'WORK' ? 'Work Experience' : 'Project Experience'}\n        <PeriodMark>.</PeriodMark>\n      </StyledH2>\n      {data.map((project, id) => (\n        <Row key={id}>\n          <RowLeft>\n            <StyledH3>\n              {project.title}\n              <PeriodMark>.</PeriodMark>\n            </StyledH3>\n            <Role>{project.role}</Role>\n            <Time>{project.time}</Time>\n          </RowLeft>\n          <RowRight>\n            {project.projects.map((project, id) => (\n              <Project key={`project${id}`}>\n                <StyledH4>\n                  {project.name}\n                  <PeriodMark>.</PeriodMark>\n                </StyledH4>\n                {project.link && (\n                  <Role>\n                    {project.link.map((data, id) => (\n                      <StyledA\n                        target=\"_blank\"\n                        href={data.link}\n                        rel=\"noreferrer\"\n                        key={id}\n                      >\n                        {data.name}\n                      </StyledA>\n                    ))}\n                  </Role>\n                )}\n                {project.role && <Role>팀 구성: {project.role}</Role>}\n                <Time>{project.duration}</Time>\n\n                <StyledH5>\n                  Description<PeriodMark>.</PeriodMark>\n                </StyledH5>\n                <StyledP>{project.description}</StyledP>\n                {project.whatYouDid && (\n                  <>\n                    <StyledH5>\n                      What did I do<PeriodMark>.</PeriodMark>\n                    </StyledH5>\n                    <StyledUl>\n                      {project.whatYouDid.map((did, id) => (\n                        <StyledLi key={id}>{did}</StyledLi>\n                      ))}\n                    </StyledUl>\n                  </>\n                )}\n                {project.whatYouLearn && (\n                  <>\n                    <StyledH5>\n                      What did I Learn<PeriodMark>.</PeriodMark>\n                    </StyledH5>\n                    <StyledUl>\n                      {project.whatYouLearn.map((learn, id) => (\n                        <StyledLi key={id}>{learn}</StyledLi>\n                      ))}\n                    </StyledUl>\n                  </>\n                )}\n                <StyledH5>\n                  TechStack<PeriodMark>.</PeriodMark>\n                </StyledH5>\n                <p>{project.techStack}</p>\n              </Project>\n            ))}\n          </RowRight>\n        </Row>\n      ))}\n    </StyledSection>\n  );\n};\n\nexport default Projects;\n","import React, { ReactNode } from 'react';\n\nexport interface ProjectProps {\n  title: string;\n  role: string;\n  time: string;\n  projects: {\n    name: string;\n    role?: string;\n    duration?: string;\n    link?: {\n      name: string;\n      link: string;\n    }[];\n    description?: ReactNode;\n    whatYouLearn?: ReactNode[];\n    whatYouDid: ReactNode[];\n    techStack: string;\n  }[];\n}\nexport type ProjectList = ProjectProps[];\n\nexport const projectData: ProjectList = [\n  {\n    title: 'Google DSC Korea',\n    role: 'Frontend Developer',\n    time: '2021.08 - 현재',\n    projects: [\n      {\n        name: 'GDSC DJU Web',\n        role: 'frontend 1',\n        duration: '2021.10.29 - 2021.12.27',\n        description:\n          '1인 개발로 제작한 커뮤니티 소개 및 지원사이트 입니다. 제작 이후 지원자 수가 50% 증가했습니다. 코드 리팩토링을 진행하며 React-lazy를 통한 최적화로 lighthouse 기준 performance 점수를 92점까지 향상시켰습니다. 내부 서비스들을 모노레포로 관리하고 있습니다.',\n        link: [\n          {\n            name: 'Github',\n            link: 'https://github.com/GDSC-Daejin/gdsc-dju-websites/tree/master',\n          },\n          {\n            name: 'Website',\n            link: 'https://web.gdsc-dju.com',\n          },\n        ],\n        whatYouDid: [\n          'webpack → vite 번들러 변경으로 빌드 속도 67% 상승 (98.40s → 42.88s)',\n          '성능 개선을 위한 React-Lazy 적용',\n          'SVG 모션 사파리 크로스브라우징 이슈 해결',\n          '포지션 별 지원하기 기능 개발',\n          '사용자 세팅에 따른 다크모드 적용 개발',\n          'Github Action firebase Hosting/Preview 세팅',\n          'Atmoic Design 패턴 적용',\n        ],\n        whatYouLearn: ['CORS 오류', '무료 도메인 이슈'],\n        techStack:\n          'Yarn Berry, React, TypeScript, Styled-component, Recoil, Framer-motion, firebase Hosting, @gdsc-dju/styled-components',\n      },\n      {\n        name: 'Tech blog',\n        role: 'frontend 3, backend 3, designer 3',\n        duration: '2022.02.08 - 중단',\n        description:\n          'GDSC DJU 내부 사용 목적으로 개발된 기술 블로그입니다. 프로젝트를 처음 참여하시는 멤버 분들을 고려하여 프로젝트를 진행했습니다.',\n        link: [\n          {\n            name: 'Github',\n            link: 'https://github.com/GDSC-Daejin/gdsc-dju-websites/tree/master',\n          },\n          {\n            name: 'Website',\n            link: 'https://blog.gdsc-dju.com',\n          },\n        ],\n        whatYouDid: [\n          'CI/CD 세팅',\n          '내 블로그, 스크랩, 프로필 수정 페이지 개발',\n          '글 작성, 수정 페이지 리팩토링',\n          'Alert, Modal 개발',\n        ],\n\n        techStack:\n          'Yarn Berry, React, TypeScript, Styled-component, Recoil, React-Query, Framer-motion, firebase Hosting',\n      },\n      {\n        name: 'GDS',\n        role: 'frontend 1, designer 1',\n        duration: '2022.8 - 현재',\n        description:\n          '웹 서비스에서 자주 사용되는 컴포넌트와 디자인 에셋들을 라이브러리로 만들었습니다. Rollup 도입으로 약 40%의 용량 감소를 이뤘습니다. ' +\n          'Styled-Components 기반 라이브러리의 한계를 느끼고 CSS 변수를 사용하는 방식으로 변경했습니다.',\n        link: [\n          {\n            name: 'Github',\n            link: 'https://github.com/GDSC-Daejin/design-seed',\n          },\n          {\n            name: 'Docs',\n            link: 'https://design.gdsc-dju.com/',\n          },\n        ],\n        whatYouDid: [\n          'mode type에 따른 dark, light mode 변경 기능 개발',\n          'token type 지정',\n          'Navigation, Footer, Input 등 공용 컴포넌트 개발',\n          'npm package 배포',\n        ],\n        techStack: 'React, TypeScript, Styled-Components',\n      },\n      {\n        name: 'GDSC DJU Admin',\n        role: 'frontend 1, backend 1',\n        duration: '2022.05.25 - 2022.07.04',\n        description:\n          '커뮤니티 규모가 커짐에 따라 지원자 관리 기능의 필요성을 느껴 시작하게 되었습니다. 지원서 열람, 지원서 코멘트, 지원자 별 이메일 자동전송 기능을 포함하고 있습니다.',\n        link: [\n          {\n            name: 'Github',\n            link: 'https://github.com/GDSC-Daejin/gdsc-dju-websites/tree/master',\n          },\n        ],\n        whatYouDid: [\n          '지원자 관리 페이지, 지원서 Modal 개발',\n          '지원서에 대한 comment 기능 개발',\n          '지원자 합류과정에 따른 filter 기능 개발',\n          '이메일 로그 열람 및 email.js를 활용한 이메일 자동 전송 기능 개발',\n        ],\n        techStack:\n          'Yarn Berry, React, TypeScript, Styled-component, Framer-motion, firebase Hosting, firestore, emailjs, React-Query, Jotai',\n      },\n      // {\n      //   name: 'Devfest [GDG X GDSC] 출석부',\n      //   role: 'frontend 3, backend 3',\n      //   duration: '2021. 10. 05 - 2021. 10. 26',\n      //   description:\n      //     'GDG Korea에서 진행하는 Devfest 2021 출석부 제작에 프론트엔드 개발자 3명 중 한 명으로 참여했습니다.',\n      //   link: [\n      //     {\n      //       name: 'Github',\n      //       link: 'https://github.com/devfest-2021/devfest-2021-guidebook-fe',\n      //     },\n      //     {\n      //       name: 'Website',\n      //       link: 'https://devfest-2021-guestbook.netlify.app',\n      //     },\n      //   ],\n      //   whatYouDid: [\n      //     '로그인, 로그아웃 관련 Modal 개발',\n      //     '유저 프로필, 프로필 수정 개발',\n      //   ],\n      //   whatYouLearn: ['백엔드와의 커뮤니케이션', 'Commit Convention'],\n      //   techStack: 'React, TypeScript, Styled-component, Recoil, SWR, Axios',\n      // },\n    ],\n  },\n  // {\n  //   title: 'TEAM OZET',\n  //   role: 'Frontend Developer',\n  //   time: '2021. 11 - 현재',\n  //   projects: [\n  //     {\n  //       name: 'OZET',\n  //       role: 'frontend 2, backend 2, android 2, ios 1, designer 3',\n  //       duration: '2021. 11. 27 - 중단',\n  //       description:\n  //         '전용 채용 플랫폼이 없는 미용사들을 위한 채용 플랫폼입니다. 현직자 분들과의 사이드 프로젝트로 진행 중이며 웹뷰와 네이티브앱 간의 차이를 줄이기 위해 노력했습니다. 현재 프로젝트가 중단된 상태입니다.',\n  //       link: [\n  //         {\n  //           name: 'Github(이력서 페이지)',\n  //           link: 'https://github.com/ozet-team/ozet-resume',\n  //         },\n  //         {\n  //           name: 'Github(채용 공고)',\n  //           link: 'https://github.com/ozet-team/ozet-hybrid',\n  //         },\n  //       ],\n  //       whatYouDid: [\n  //         '반응형 이력서 페이지 개발',\n  //         '상세공고 페이지 개발',\n  //         '이력서 PDF 마크업',\n  //       ],\n  //       whatYouLearn: [\n  //         '이력서 페이지 부분의 개발공수를 고려하며 디자이너 분과 상의를 통해 슬라이드 모션을 조율했습니다.',\n  //       ],\n  //       techStack:\n  //         'TypeScript, React.js, Styled-component, Recoil, SWR, karrot-frame',\n  //     },\n  //   ],\n  // },\n];\n","import React from 'react';\nimport {\n  Other,\n  PeriodMark,\n  StyledH2,\n  StyledH3,\n  StyledSection,\n  StyledUl,\n} from '../styled';\nimport { CommunicationList } from '../contents/communication';\n\nconst Communication = ({ data }: { data: CommunicationList }) => {\n  return (\n    <StyledSection>\n      <StyledH2>\n        Communication\n        <PeriodMark>.</PeriodMark>\n      </StyledH2>\n      {data.map((communication, id) => (\n        <Other key={id}>\n          <StyledH3>\n            {communication.title}\n            <PeriodMark>.</PeriodMark>\n          </StyledH3>\n          <StyledUl>\n            {communication.content.map((data, id) => (\n              <li key={id}>{data}</li>\n            ))}\n          </StyledUl>\n        </Other>\n      ))}\n    </StyledSection>\n  );\n};\n\nexport default Communication;\n","import { ReactNode } from 'react';\nimport { StyledA } from '../styled';\n\nexport interface CommunicationProps {\n  title: string;\n  content: ReactNode[];\n}\n\nexport type CommunicationList = CommunicationProps[];\n\nexport const communicationData: CommunicationList = [\n  {\n    title: 'Overall',\n    content: [\n      'Framer-motion을 사용하여 UI 및 애니메이션 구현을 즐깁니다. 꼭 애니메이션이 디자인에 포함되어 있지 않아도 선행해서 애니메이션을 구현하거나 제안하는 편입니다.',\n      '프로젝트에 필요하다면 능숙하지 않아도 학습하여 최적의 결과를 낼 수 있도록 노력합니다.',\n      <>\n        커뮤니티 혹은 팀의 프로세스 및 문화를{' '}\n        <StyledA\n          href={'https://hyeok.dev/22.11.02%20%ED%9A%8C%EA%B3%A0%EB%A1%9D'}\n        >\n          개선하거나 바꾸려는 시도\n        </StyledA>\n        를 적극적으로 하며 아이디어의 수용이 빠릅니다.\n      </>,\n      '직위 및 포지션에 관계없이 적극적으로 생각을 피력합니다.',\n      '커뮤니케이션은 적은 것보다 많은게 좋다고 생각합니다.',\n      '프로덕트의 기획 회의부터 참여하는 것을 선호합니다.',\n    ],\n  },\n  // {\n  //   title: 'JavaScript',\n  //   content: [\n  //     'JavaScript 동작원리를 이해하고 있으며 ES6+ 문법을 사용합니다.',\n  //     'Yarn과 Yarn Berry 사용을 선호합니다.',\n  //   ],\n  // },\n  // {\n  //   title: 'React',\n  //   content: [\n  //     'React hook을 적절하게 사용할 수 있으며 필요에 따라 커스텀 훅을 제작할 수 있습니다.',\n  //     '여러 디자인 패턴을 이해하고 있으며 필요에 따라 적절한 패턴을 사용할 수 있습니다.',\n  //   ],\n  // },\n  // {\n  //   title: 'Web',\n  //   content: [\n  //     'FCP, LCP, TTI 등의 웹 성능 지표를 이해하고 있으며, 성능 최적화를 위한 방법을 알고 있습니다.',\n  //     '검색엔진의 웹 크롤링 방식을 이해하고 있으며, SEO 최적화를 고려하며 개발합니다.',\n  //   ],\n  // },\n];\n","import React from 'react';\nimport { ExperienceType } from '../contents/experience';\nimport {\n  Other,\n  PeriodMark,\n  Role,\n  StyledH2,\n  StyledH3,\n  StyledP,\n  StyledSection,\n  StyledUl,\n  Time,\n} from '../styled';\n\nconst Experience = ({ data }: { data: ExperienceType }) => {\n  return (\n    <StyledSection>\n      <StyledH2>\n        {data.title}\n        <PeriodMark>.</PeriodMark>\n      </StyledH2>\n      {data.data.map((experience, id) => (\n        <Other key={id}>\n          <StyledH3>\n            {experience.title}\n            <PeriodMark>.</PeriodMark>\n          </StyledH3>\n          <Role>{experience.role}</Role>\n          <Time>{experience.time}</Time>\n          <StyledP>{experience.description}</StyledP>\n          {experience.content && (\n            <StyledUl>\n              {experience.content.map((data, id) => (\n                <li key={id}>{data}</li>\n              ))}\n            </StyledUl>\n          )}\n        </Other>\n      ))}\n    </StyledSection>\n  );\n};\n\nexport default Experience;\n","import React, { ReactNode } from 'react';\nimport { StyledA } from '../styled';\n\ninterface ExperienceProps {\n  title: string;\n  role?: string;\n  time: string;\n  description: ReactNode;\n  content?: ReactNode[];\n}\nexport type ExperienceType = {\n  title: string;\n  data: ExperienceProps[];\n};\n\nexport const experienceData: ExperienceType = {\n  title: 'Other Experiences',\n  data: [\n    {\n      title: 'GDG Korea WebTech',\n      role: 'Organizer',\n      time: '2023.03 - 현재',\n      description: (\n        <>\n          구글의 웹 기술 기반 개발자 커뮤니티인{' '}\n          <StyledA href={'https://gdg.community.dev/gdg-korea-webtech/'}>\n            GDG Korea WebTech\n          </StyledA>\n          의 Organizer를 맡고 있습니다.\n        </>\n      ),\n    },\n    {\n      title: 'GoogleDSC Korea',\n      role: 'Lead',\n      time: '2021.08 - 2023.07(예정)',\n      description: (\n        <>\n          {' '}\n          Google Developers에서 지원하는{' '}\n          <StyledA href={'https://sites.google.com/view/gdeveloperskorea/gdsc'}>\n            GoogleDSC\n          </StyledA>\n          Daejin University 챕터의\n          <StyledA\n            href={\n              'https://drive.google.com/file/d/1SNGRgxPexq2h2BCc1RPE7P_Pa2hiHCli/view'\n            }\n          >\n            {' '}\n            1기\n          </StyledA>\n          와 2기 리드를 맡고 있습니다.\n        </>\n      ),\n      content: [\n        <>\n          GDSC KOREA 2021 - 2022{' '}\n          <StyledA\n            href={\n              'https://drive.google.com/file/d/1xMd5Gr5jbQ83-ahmh6QNH2v-2zHvMVxz/view'\n            }\n          >\n            우수 리드\n          </StyledA>\n          로 선정되었습니다.\n        </>,\n        '커뮤니티 내부에서 사용하는 서비스들을 개발했습니다.',\n        '영어 닉네임을 도입하여 학번, 나이, 경력에 상관없이 수평적 문화를 조성하도록 노력했습니다.',\n        '충돌은 더 나은 환경을 만든다고 생각하기 때문에 모두가 생각을 피력할 수 있는 환경을 조성했습니다.',\n        'Notion과 Slack을 사용하여 내부 활동들을 문서화하고 있습니다.',\n        '내부 활동을 마친 후 참여인원이 회고록을 작성함으로서 더 발전할 수 있는 환경을 만들고 있습니다.',\n      ],\n    },\n    {\n      title: 'GDSC Career, 하루간 구글을 무료체험 해보세요',\n      time: '2022. 07. 02',\n      description: (\n        <>\n          <StyledA href={'https://festa.io/events/2397'}>\n            구글러와 함께하는 커리어 세션\n          </StyledA>\n          을 기획 및 운영했습니다.\n        </>\n      ),\n    },\n    {\n      title: '대진대학교',\n      time: '휴먼IT융합학부 - 로봇공학과',\n      description: '3학년 2학기를 마치고 휴학 중입니다.',\n    },\n  ],\n};\n","import { StyledA } from '../styled';\nimport { ProjectList } from './project';\n\nexport const workExperience: ProjectList = [\n  {\n    title: 'Shopl&Company',\n    role: 'Frontend Developer',\n    time: '2023.01 - 현재',\n    projects: [\n      {\n        name: 'Hada Design System',\n        duration: '2023.02 - 현재',\n        description: (\n          <>\n            디자인 일관성과 생산성을 높이기 위해 하다 디자인 시스템을 설계 및\n            구현했습니다. 개발자/디자이너에게 좋은 사용성을 제공하기 위해 props\n            옵션 네이밍 통일, 컴포넌트 구조를 상의하며 개발했습니다. 현재 하다,\n            샤플 디자인 시스템 통합을 준비 중에 있습니다.\n          </>\n        ),\n        whatYouDid: [\n          'Storybook을 이용한 컴포넌트 개발 및 문서화',\n          'Github Action을 이용한 배포 자동화 및 버전관리',\n          'SVG 아이콘 컴포넌트 변환 자동화',\n          <>\n            개발자 경험과 유연한 시멘틱 태그를 제공하기 위한{' '}\n            <StyledA\n              href={\n                'https://hyeok.dev/Polymorphic%ED%95%9C%20React%20%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0#1c65ea3622184940a5367893937d503f'\n              }\n            >\n              Polymorphic 컴포넌트 개발\n            </StyledA>\n          </>,\n        ],\n        techStack:\n          'Storybook, React, TypeScript, @emotion, framer-motion, Rollup',\n      },\n      {\n        name: 'Hada Dashboard',\n        duration: '2023.01 - 현재',\n        description: (\n          <>\n            현장 시설 관리 서비스{' '}\n            <StyledA href={'https://www.hadaworks.com'}>하다</StyledA>의{' '}\n            <StyledA href={'https://dashboard.hadaworks.com/auth/signup'}>\n              대시보드 페이지\n            </StyledA>\n            를 개발했습니다. 유지보수를 비롯해 비즈니스의 요구에 맞는 다양한\n            기능을 개발했습니다.\n          </>\n        ),\n        whatYouDid: [\n          '명세되지 않은 라이브러리를 참조하는 이슈를 yarn berry 도입으로 해결했습니다.',\n          '코드 스타일의 일관성을 위해 공통 lint 규칙을 설정하고 코드 컨벤션 문서를 작성했습니다.',\n          '주간 프론트엔드 회의를 주관하며 코드리뷰를 도입했습니다.',\n          '시설 그룹화 기능 개발',\n          '시설 페이지 내 시설 정보 열람, 점검 내역 조회, 수정, 점검표 조회 기능 개발',\n          '대시보드 필터 UI 및 기능 개편',\n          '결제 페이지 내 요금제 정보, 정산담당자, 결제 내역 조회 기능 개발',\n        ],\n        techStack:\n          'React, TypeScript, @emotion, Redux, Redux-Toolkit, React-Query, HDS, mui',\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport Projects from './components/Projects';\nimport { projectData } from './contents/project';\nimport {\n  BigParagraph,\n  Container,\n  Other,\n  PeriodMark,\n  StyledA,\n  StyledH1,\n  StyledH2,\n  StyledLi,\n  StyledSection,\n  StyledUl,\n} from './styled';\nimport Communication from './components/Communciation';\nimport { communicationData } from './contents/communication';\nimport Experience from './components/Experience';\nimport { experienceData } from './contents/experience';\nimport { workExperience } from './contents/workExperience';\n\nconst Resume = () => {\n  return (\n    <Container>\n      <StyledSection>\n        <StyledH1>\n          반갑습니다 <br />\n          저는 정준혁입니다<PeriodMark>.</PeriodMark>\n        </StyledH1>\n        <BigParagraph>\n          문제를 정의하고 해결하는데 강점이 있습니다. <br />\n          사용자를 먼저 생각하고 사용자의 불편함을 해소하는데 집중합니다.\n          <br />\n          프론트엔드는 사용자에게 가장 맞닿은 직군이라고 생각하기 때문에\n          사용자의 문제를 해결하기 위한 개발을 하고 있습니다.\n        </BigParagraph>\n      </StyledSection>\n      <Projects data={workExperience} type={'WORK'} />\n      <Projects data={projectData} type={'PROJECT'} />\n      <Communication data={communicationData} />\n      <Experience data={experienceData} />\n      <StyledSection>\n        <Other>\n          <StyledH2>\n            Contact<PeriodMark>.</PeriodMark>\n          </StyledH2>\n          <StyledUl>\n            <StyledLi>\n              <StyledA href=\"mailto:jhjeong00@gmail.com\">이메일</StyledA>\n            </StyledLi>\n            <StyledLi>\n              <StyledA\n                href=\"https://hyeok.dev/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                블로그\n              </StyledA>\n            </StyledLi>\n            <StyledLi>\n              <StyledA\n                href=\"https://github.com/HyeokE\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                깃허브\n              </StyledA>\n            </StyledLi>\n          </StyledUl>\n        </Other>\n      </StyledSection>\n    </Container>\n  );\n};\n\nexport default Resume;\n","import React from 'react';\n\nimport Resume from './Resume';\n\nfunction App() {\n  return <Resume />;\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  @import \"../node_modules/normalize.css/normalize.css\";\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    font-size: 16px;\n    word-break: keep-all;\n    font-family: Pretendard, -apple-system, BlinkMacSystemFont, Bazier Square,\n    Noto Sans KR, Segoe UI, Apple SD Gothic Neo, Roboto, Helvetica Neue, Arial,\n    sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol,\n    Noto Color Emoji;\n    letter-spacing: -0.3px;\n    color: #222222;\n    padding-bottom: 2rem;\n    overflow-x: hidden;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    @media screen and (max-width: 960px) {\n      \n        font-size: 14px;\n      \n    }\n    &:before {\n      position: fixed;\n      z-index: 1;\n      top: 0;\n      display: block;\n      content: \"\";\n      width: 100%;\n      height: 10px;\n      background: #00d2ff;\n      background: linear-gradient(to right, #3a7bd5, #00d2ff);\n    }\n  }\n\n  \n  ::selection {\n    background: #00d2ff;\n  }`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { GlobalStyles } from './GlobalStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}